on: [push, pull_request]
name: Tests
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      CARGO_UNSTABLE_SPARSE_REGISTRY: true
      RUSTFLAGS: "-C target-cpu=native -D warnings"
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@nightly
      - name: Tests
        run: |
          cargo test --release --all "gf2n::test::fast_";
          cargo test --release --all "gf2n::test::clmul_";
          cargo test --release --all "gf2n::test::gf008::";
          cargo test --release --all "gf2n::test::gf016::";
          cargo test --release --all "gf2n::test::gf032::";
          cargo test --release --all "gf2n::test::gf064::";
          cargo test --release --all "gf2n::test::gf128::";
          cargo test --release --all "gf2n::test::gf256::";
          cargo test --release --all "shamir::test::fast_";
          cargo test --release --all "shamir::test::gf008::";
          cargo test --release --all "shamir::test::gf016::";
          cargo test --release --all "shamir::test::gf032::";
          cargo test --release --all "shamir::test::gf064::";
          cargo test --release --all "shamir::test::gf128::";
          cargo test --release --all "shamir::test::gf256::";
          cargo test --release --all "can_split";
          cargo test --release --all "can_reconstruct";

  cross:
    strategy:
      matrix:
        arch:
          - aarch64
          - armv7
          - i686
          - x86_64
        include:
          - arch: aarch64
            target: aarch64-unknown-linux-gnu
            rust_features: "+neon,+aes"
          - arch: armv7
            target: armv7-linux-androideabi
            rust_features: ""
          - arch: i686
            target: i686-unknown-linux-gnu
            rust_features: ""
          - arch: x86_64
            target: x86_64-unknown-linux-gnu
            rust_features: "+sse2,+pclmulqdq"
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      CARGO_UNSTABLE_SPARSE_REGISTRY: true
      RUSTFLAGS: "-C target-feature=${{ matrix.rust_features }} -D warnings"
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@nightly
        with:
          target: ${{ matrix.target }}
      - run: cargo install cross
      - name: Tests (GF2n)
        run: |
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "gf2n::test::gf008::";
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "gf2n::test::gf016::";
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "gf2n::test::gf032::";
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "gf2n::test::gf064::";
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "gf2n::test::gf128::";
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "gf2n::test::gf256::";
      - name: Tests (Shamir)
        run: |
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "shamir::test::gf008::";
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "shamir::test::gf016::";
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "shamir::test::gf032::";
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "shamir::test::gf064::";
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "shamir::test::gf128::";
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "shamir::test::gf256::";
      - name: Tests (other)
        run: |
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "gf2n::test::fast_";
          cross test --target ${{ matrix.target }} --manifest-path "horcrux/Cargo.toml" --release --verbose "can_split";
